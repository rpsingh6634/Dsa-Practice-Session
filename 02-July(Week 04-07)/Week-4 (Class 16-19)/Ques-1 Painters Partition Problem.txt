private static void painterPartition(int[] arr, int painterslimit) {
int low = arr[arr.length-1]; 
int high = 0; 
for(int val:arr) {
high+=val;
}

while (Low < high){
int midTime = Low+(high-Low)/2; 
int painterRequired = painterCalculation(arr, midTime); 
if(painter Required <= paintersLimit){
high = midtime;
}
else{
low = midTime+1;
}
}
System.out.println(Low); 
} 
private static int painterCalculation (int[] arr, int time) {
int paintersCount = 1; 
int sum = 0; 
for(int i=0; i< arr.length; i++) {
sum+=arr[i]; 
if(sum > time) {
paintersCount++; 
sum=arr[i];
}
}
return paintersCount;
}
}
